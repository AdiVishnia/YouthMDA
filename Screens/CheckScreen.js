import React, { useState } from "react";
import { Text, View, StyleSheet, ScrollView, TouchableOpacity, Platform } from "react-native";
//◊†◊û◊¶◊ê ◊ë◊°◊§◊® ◊§◊®◊ï◊ô◊ô◊ß◊ò
const CheckScreen = () => {
  const [checkedItems, setCheckedItems] = useState({
    // Basic Items
    "◊ß◊®◊© ◊í◊ë": false,
    "◊ì◊§◊ô◊ë◊®◊ô◊ú◊ò◊ï◊®": false,
    "◊ó◊û◊¶◊ü ◊ß◊ò◊ü": false,
    "◊ó◊û◊¶◊ü ◊í◊ì◊ï◊ú": false,

    // ◊™◊ê ◊í◊ì◊ï◊ú
    "◊û◊ì ◊ú◊ó◊• ◊ì◊ù": false,
    "◊§◊ó ◊û◊ó◊ò◊ô◊ù": false,
    "◊°◊ß◊©◊ü": false,
    "◊ê◊û◊ë◊ï ◊í◊ì◊ï◊ú": false,
    "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 5": false,
    "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 2": false,
    "◊û◊°◊†◊†◊ô◊ù ◊ï◊ô◊®◊ê◊ú◊ô◊ù": false,

    // ◊™◊ê ◊ê◊û◊¶◊¢◊ô
    "◊ê◊§◊ô◊§◊ü - ◊™◊ï◊ß◊£": false,
    "◊í◊ú◊ï◊ß◊ï◊û◊ò◊®": false,
    "◊í◊ú◊ï◊ß◊ï◊í'◊ú": false,
    "◊°◊ò◊ô◊ß◊ô◊ù": false,
    "◊ì◊ï◊ß◊®◊†◊ô◊ù": false,
    "◊ê◊°◊§◊ô◊®◊ô◊ü": false,
    "◊§◊ì◊ô ◊í◊ñ◊î": false,
    "◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î": false,
    "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô": false,
    "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™": false,
    "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™": false,
    "◊û◊©◊ï◊ú◊©◊ô◊ù": false,
    "◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù": false,

    // ◊™◊ê ◊ß◊ò◊ü
    "◊ê◊ô◊®◊ï◊ï◊ô ◊õ◊™◊ï◊ù": false,
    "◊ê◊ô◊®◊ï◊ï◊ô ◊ô◊®◊ï◊ß": false,
    "◊ê◊ô◊®◊ï◊ï◊ô ◊ê◊ì◊ï◊ù": false,
    "◊ê◊ô◊®◊ï◊ï◊ô ◊ú◊ë◊ü": false,
    "◊ß◊ò◊ò◊® ◊õ◊ó◊ï◊ú": false,
    "◊ß◊ò◊ò◊® ◊ê◊ì◊ï◊ù": false,

    // ◊™◊ô◊ß ◊ê◊û◊ë◊ï ◊ô◊ú◊ì◊ô◊ù
    "◊ê◊§◊ô◊§◊ü ◊ô◊ú◊ì◊ô◊ù": false,
    "◊û◊ì ◊ú◊ó◊• ◊ì◊ù ◊ô◊ú◊ì◊ô◊ù": false,
    "◊ê◊ô◊®◊ï◊ï◊ô ◊™◊õ◊ú◊™": false,
    "◊ê◊ô◊®◊ï◊ï◊ô ◊©◊ó◊ï◊®": false,
    "◊ß◊ò◊ò◊® ◊ô◊®◊ï◊ß": false,
    "◊ß◊ò◊ò◊® ◊™◊õ◊ú◊™": false,
    "◊û◊§◊ï◊ó ◊ê◊û◊ë◊ï": false,
    "◊û◊°◊õ◊™ ◊ô◊ú◊ì": false,
    "◊û◊°◊õ◊™ ◊™◊ô◊†◊ï◊ß": false,
    "◊©◊û◊ô◊õ◊™ ◊û◊ô◊ú◊ï◊ò": false,

    // ◊™◊ô◊ß ◊ó◊ï◊ë◊©
    "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™ ◊ó◊ï◊ë◊©": false,
    "◊û◊©◊ï◊ú◊©◊ô◊ù ◊ó◊ï◊ë◊©": false,
    "◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù ◊ó◊ï◊ë◊©": false,
    "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™ ◊ó◊ï◊ë◊©": false,
    "◊û◊ô◊ß◊®◊ï◊§◊ï◊®": false,
    "◊ô◊ï◊ì": false,
    "◊§◊ì◊ô ◊í◊ñ◊î ◊ó◊ï◊ë◊©": false,
    "◊û◊ú◊¢◊¥◊õ": false,
    "◊°◊ì ◊ß◊ô◊ë◊ï◊¢": false,

    // ◊™◊ê◊ô◊ù ◊†◊ï◊°◊§◊ô◊ù
    "◊¢◊®◊õ◊™ ◊ú◊ô◊ì◊î": false,
    "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô ◊™◊ê◊ô◊ù": false,
    "◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î ◊™◊ê◊ô◊ù": false,
    "◊©◊ß◊ô◊™ ◊ß◊ô◊®◊ï◊®": false,
    "◊©◊ß◊ô◊ï◊™ ◊†◊ô◊ô◊ú◊ï◊ü": false,
    "◊°◊ì◊ô◊†◊ô◊ù": false,
    "◊ï◊ï◊°◊ò◊ô◊ù ◊ñ◊ï◊î◊®◊ô◊ù": false,
  });

  const [openCategories, setOpenCategories] = useState({});

  const categories = [
    {
      title: "◊ë◊ì◊ô◊ß◊ï◊™ ◊®◊ê◊©◊ï◊†◊ô◊ï◊™ üöë",
      items: [
        { label: "◊ß◊®◊© ◊í◊ë (◊û◊™◊ó◊™ ◊ú◊°◊§◊°◊ú)", value: "◊ß◊®◊© ◊í◊ë" },
        { label: "◊ì◊§◊ô◊ë◊®◊ô◊ú◊ò◊ï◊® - ◊ë◊ì◊ô◊ß◊™ ◊™◊ß◊ô◊†◊ï◊™, ◊û◊í◊ú◊ó, ◊û◊ì◊ë◊ß◊ï◊™", value: "◊ì◊§◊ô◊ë◊®◊ô◊ú◊ò◊ï◊® - ◊û◊ì◊ë◊ß◊ï◊™" },
        { label: "◊ó◊û◊¶◊ü ◊ß◊ò◊ü", value: "◊ó◊û◊¶◊ü ◊ß◊ò◊ü" },
        { label: "◊ó◊û◊¶◊ü ◊í◊ì◊ï◊ú", value: "◊ó◊û◊¶◊ü ◊í◊ì◊ï◊ú" },
      ]
    },
    {
      title: "◊™◊ô◊ß ◊ê◊û◊ë◊ï- ◊™◊ê ◊í◊ì◊ï◊ú üéí",
      items: [
        { label: "◊û◊ì ◊ú◊ó◊• ◊ì◊ù - ◊™◊ß◊ô◊†◊ï◊™", value: "◊û◊ì ◊ú◊ó◊• ◊ì◊ù" },
        { label: "◊§◊ó ◊û◊ó◊ò◊ô◊ù - ◊ú◊ê ◊†◊¢◊ï◊ú", value: "◊§◊ó ◊û◊ó◊ò◊ô◊ù" },
        { label: "◊°◊ß◊©◊ü", value: "◊°◊ß◊©◊ü" },
        { label: "◊ê◊û◊ë◊ï ◊í◊ì◊ï◊ú", value: "◊ê◊û◊ë◊ï ◊í◊ì◊ï◊ú" },
        { label: "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 5", value: "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 5" },
        { label: "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 2", value: "◊û◊°◊õ◊î ◊í◊ï◊ì◊ú 2" },
        { label: "2 ◊û◊°◊†◊†◊ô◊ù ◊ï◊ô◊®◊ê◊ú◊ô◊ù", value: "◊û◊°◊†◊†◊ô◊ù ◊ï◊ô◊®◊ê◊ú◊ô◊ù" },
      ]
    },
    {
      title: "◊™◊ô◊ß ◊ê◊û◊ë◊ï- ◊™◊ê ◊ê◊û◊¶◊¢◊ô üíä",
      items: [
        { label: "◊ê◊§◊ô◊§◊ü - ◊ë◊ì◊ô◊ß◊™ ◊™◊ï◊ß◊£", value: "◊ê◊§◊ô◊§◊ü - ◊™◊ï◊ß◊£" },
        { label: "◊í◊ú◊ï◊ß◊ï◊û◊ò◊®", value: "◊í◊ú◊ï◊ß◊ï◊û◊ò◊®" },
        { label: "2 ◊í◊ú◊ï◊ß◊ï◊í'◊ú ◊ë◊™◊ï◊ß◊£", value: "◊í◊ú◊ï◊ß◊ï◊í'◊ú" },
        { label: "6-10 ◊°◊ò◊ô◊ß◊ô◊ù", value: "◊°◊ò◊ô◊ß◊ô◊ù" },
        { label: "6-10 ◊ì◊ï◊ß◊®◊†◊ô◊ù", value: "◊ì◊ï◊ß◊®◊†◊ô◊ù" },
        { label: "◊û◊¢◊ú 5 ◊ê◊°◊§◊ô◊®◊ô◊ü", value: "◊ê◊°◊§◊ô◊®◊ô◊ü" },
        { label: "◊û◊¢◊ú 5 ◊§◊ì◊ô ◊í◊ñ◊î", value: "◊§◊ì◊ô ◊í◊ñ◊î" },
        { label: "2 ◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î", value: "◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î" },
        { label: "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô ◊ë◊™◊ï◊ß◊£", value: "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô" },
        { label: "1-2 ◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™", value: "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™" },
        { label: "1-2 ◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™", value: "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™" },
        { label: "1-2 ◊û◊©◊ï◊ú◊©◊ô◊ù", value: "◊û◊©◊ï◊ú◊©◊ô◊ù" },
        { label: "2-3 ◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù", value: "◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù" }
      ]
    },
    {
      title: "◊™◊ô◊ß ◊ê◊û◊ë◊ï-◊™◊ê ◊ß◊ò◊ü üîß",
      items: [
        { label: "◊ê◊ô◊®◊ï◊ï◊ô ◊õ◊™◊ï◊ù", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊õ◊™◊ï◊ù" },
        { label: "◊ê◊ô◊®◊ï◊ï◊ô ◊ô◊®◊ï◊ß", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊ô◊®◊ï◊ß" },
        { label: "◊ê◊ô◊®◊ï◊ï◊ô ◊ê◊ì◊ï◊ù", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊ê◊ì◊ï◊ù" },
        { label: "◊ê◊ô◊®◊ï◊ï◊ô ◊ú◊ë◊ü", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊ú◊ë◊ü" },
        { label: "2 ◊ß◊ò◊ò◊® ◊õ◊ó◊ï◊ú", value: "◊ß◊ò◊ò◊® ◊õ◊ó◊ï◊ú" },
        { label: "2 ◊ß◊ò◊ò◊® ◊ê◊ì◊ï◊ù", value: "◊ß◊ò◊ò◊® ◊ê◊ì◊ï◊ù" }
      ]
    },
    {
      title: "◊™◊ô◊ß ◊ê◊û◊ë◊ï ◊ô◊ú◊ì◊ô◊ù üë∂",
      items: [
        { label: "◊ê◊§◊ô◊§◊ü ◊ô◊ú◊ì◊ô◊ù - ◊ë◊ì◊ô◊ß◊™ ◊™◊ï◊ß◊£", value: "◊ê◊§◊ô◊§◊ü ◊ô◊ú◊ì◊ô◊ù" },
        { label: "◊û◊ì ◊ú◊ó◊• ◊ì◊ù ◊ô◊ú◊ì◊ô◊ù - ◊™◊ß◊ô◊†◊ï◊™", value: "◊û◊ì ◊ú◊ó◊• ◊ì◊ù ◊ô◊ú◊ì◊ô◊ù" },
        { label: "2 ◊ê◊ô◊®◊ï◊ï◊ô ◊™◊õ◊ú◊™", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊™◊õ◊ú◊™" },
        { label: "2 ◊ê◊ô◊®◊ï◊ï◊ô ◊©◊ó◊ï◊®", value: "◊ê◊ô◊®◊ï◊ï◊ô ◊©◊ó◊ï◊®" },
        { label: "2 ◊ß◊ò◊ò◊® ◊ô◊®◊ï◊ß", value: "◊ß◊ò◊ò◊® ◊ô◊®◊ï◊ß" },
        { label: "2 ◊ß◊ò◊ò◊® ◊™◊õ◊ú◊™", value: "◊ß◊ò◊ò◊® ◊™◊õ◊ú◊™" },
        { label: "◊û◊§◊ï◊ó ◊ê◊û◊ë◊ï - ◊™◊ß◊ô◊†◊ï◊™", value: "◊û◊§◊ï◊ó ◊ê◊û◊ë◊ï" },
        { label: "2 ◊û◊°◊õ◊ï◊™ - ◊ô◊ú◊ì ◊ï◊™◊ô◊†◊ï◊ß", value: "◊û◊°◊õ◊™ ◊ô◊ú◊ì" },
        { label: "◊©◊û◊ô◊õ◊™ ◊û◊ô◊ú◊ï◊ò", value: "◊©◊û◊ô◊õ◊™ ◊û◊ô◊ú◊ï◊ò" }
      ]
    },
    {
      title: "◊™◊ô◊ß ◊ó◊ï◊ë◊© üß≥",
      items: [
        { label: "5 ◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™", value: "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ê◊ô◊©◊ô◊ï◊™ ◊ó◊ï◊ë◊©" },
        { label: "5 ◊û◊©◊ï◊ú◊©◊ô◊ù", value: "◊û◊©◊ï◊ú◊©◊ô◊ù ◊ó◊ï◊ë◊©" },
        { label: "2 ◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù", value: "◊ó◊ï◊°◊ù ◊¢◊ï◊®◊ß◊ô◊ù ◊ó◊ï◊ë◊©" },
        { label: "2 ◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™", value: "◊™◊ó◊ë◊ï◊©◊ï◊™ ◊ë◊ô◊†◊ï◊†◊ô◊ï◊™ ◊ó◊ï◊ë◊©" },
        { label: "◊û◊ô◊ß◊®◊ï◊§◊ï◊®", value: "◊û◊ô◊ß◊®◊ï◊§◊ï◊®" },
        { label: "◊ô◊ï◊ì", value: "◊ô◊ï◊ì" },
        { label: "6-10 ◊§◊ì◊ô ◊í◊ñ◊î", value: "◊§◊ì◊ô ◊í◊ñ◊î ◊ó◊ï◊ë◊©" },
        { label: "◊û◊ú◊¢◊¥◊õ", value: "◊û◊ú◊¢◊¥◊õ" },
        { label: "◊°◊ì ◊ß◊ô◊ë◊ï◊¢", value: "◊°◊ì ◊ß◊ô◊ë◊ï◊¢" }
      ]
    },
    {
      title: "◊™◊ê◊ô◊ù ◊†◊ï◊°◊§◊ô◊ù üì¶",
      items: [
        { label: "◊¢◊®◊õ◊™ ◊ú◊ô◊ì◊î ◊ë◊™◊ï◊ß◊£", value: "◊¢◊®◊õ◊™ ◊ú◊ô◊ì◊î" },
        { label: "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô ◊ë◊™◊ï◊ß◊£", value: "◊¢◊®◊õ◊™ ◊¢◊ô◊®◊ï◊ô ◊™◊ê◊ô◊ù" },
        { label: "◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î", value: "◊©◊ß◊ô◊ï◊™ ◊î◊ß◊ê◊î ◊™◊ê◊ô◊ù" },
        { label: "◊©◊ß◊ô◊™ ◊ß◊ô◊®◊ï◊®", value: "◊©◊ß◊ô◊™ ◊ß◊ô◊®◊ï◊®" },
        { label: "◊©◊ß◊ô◊ï◊™ ◊†◊ô◊ô◊ú◊ï◊ü", value: "◊©◊ß◊ô◊ï◊™ ◊†◊ô◊ô◊ú◊ï◊ü" },
        { label: "◊°◊ì◊ô◊†◊ô◊ù", value: "◊°◊ì◊ô◊†◊ô◊ù" },
        { label: "◊ï◊ï◊°◊ò◊ô◊ù ◊ñ◊ï◊î◊®◊ô◊ù", value: "◊ï◊ï◊°◊ò◊ô◊ù ◊ñ◊ï◊î◊®◊ô◊ù" }
      ]
    }
  ];

  const toggleCheck = (value) => {
    setCheckedItems(prev => ({
      ...prev,
      [value]: !prev[value]
    }));
  };

  const toggleCategory = (title) => {
    setOpenCategories(prev => ({
      ...prev,
      [title]: !prev[title]
    }));
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.mainTitle}>◊ë◊ì◊ô◊ß◊™ ◊ê◊û◊ë◊ï◊ú◊†◊°</Text>
      <Text> </Text>
      {categories.map((category) => (
        <View key={category.title} style={styles.categoryContainer}>
          <TouchableOpacity onPress={() => toggleCategory(category.title)}>
            <Text style={styles.categoryTitle}>
              {category.title} {openCategories[category.title] ? '‚ñº' : '‚ñ∂'}
            </Text>
          </TouchableOpacity>
          {openCategories[category.title] && category.items.map((item) => (
            <TouchableOpacity
              key={item.value}
              style={styles.optionContainer}
              onPress={() => toggleCheck(item.value)}
            >
              <Text style={styles.optionLabel}>{item.label}</Text>
              <View style={[styles.checkbox, checkedItems[item.value] && styles.checked]} />
            </TouchableOpacity>
          ))}
        </View>
      ))}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#fff",
    padding: 16,
  },
  mainTitle: {
    fontSize: 28,
    fontWeight: "bold",
    textAlign: "right",
    marginVertical: 16,
    color: "#2c3e50",
    paddingHorizontal: 10,
    borderRightWidth: 4,
    borderRightColor: "#FFD700",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 3,
    elevation: 3,
    ...Platform.select({
      ios: {
        fontFamily: "Avenir",
        shadowOpacity: 0.2,
      },
      android: {
        fontFamily: "Roboto",
        elevation: 4
      },
    }),
  },
  categoryContainer: {
    marginBottom: 24,
  },
  categoryTitle: {
    fontSize: 20,
    fontWeight: "bold",
    marginBottom: 12,
    color: "#333",
    textAlign: "right",
  },
  optionContainer: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    marginBottom: 12,
    paddingVertical: 8,
    paddingHorizontal: 12,
    backgroundColor: "#f8f8f8",
    borderRadius: 8,
  },
  checkbox: {
    height: 24,
    width: 24,
    borderWidth: 2,
    borderColor: "#ccc",
    borderRadius: 4,
  },
  checked: {
    backgroundColor: "#FFD700",
    borderColor: "#FFD700",
  },
  optionLabel: {
    fontSize: 16,
    flex: 1,
    marginRight: 12,
    textAlign: 'center',
  },
});

export default CheckScreen;